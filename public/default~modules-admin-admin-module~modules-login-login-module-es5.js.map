{"version":3,"sources":["webpack:///node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-auth.js","webpack:///node_modules/@angular/fire/__ivy_ngcc__/fesm2015/angular-fire-database.js","webpack:///node_modules/@firebase/database/dist/index.cjs.js","webpack:///node_modules/firebase/database/dist/index.esm.js","webpack:///src/app/core/services/auth.service.ts"],"names":["AngularFireAuth","options","nameOrConfig","platformId","zone","schedulers","keepUnstableUntilFirst","auth","undefined","pipe","outsideAngular","runOutsideAngular","app","bufferSize","refCount","authState","onAuthStateChanged","bind","user","onIdTokenChanged","idToken","getIdToken","idTokenResult","getIdTokenResult","ɵfac","AngularFireAuth_Factory","t","ctorParameters","type","decorators","args","Object","ɵprov","factory","token","providedIn","AngularFireAuthModule","ɵmod","ɵinj","AngularFireAuthModule_Factory","providers","isString","value","isFirebaseDataSnapshot","exportVal","isNil","obj","isFirebaseRef","set","getRef","database","pathRef","ref","checkOperationCases","item","cases","stringCase","firebaseCase","snapshotCase","Error","SnapshotPrevKey","fromRef","event","listenType","scheduler","subscriber","fn","snapshot","prevKey","schedule","next","complete","err","error","unsubscribe","off","payload","key","exists","listChanges","events","snapshotAction","childEvent$","forEach","push","buildView","positionFor","changes","len","length","i","positionAfter","current","action","currentKeyPosition","afterPreviousKeyPosition","previous","filter","x","splice","slice","map","data","validateEventsArray","snapshotChanges","query","stateChanges","auditTrail","auditTrail$","waitForLoaded","LoadedMetadata","loadedData","lastKeyToLoad","child","action$","loaded$","loaded","actions","loadedKeys","snap","meta","indexOf","createDataOperationMethod","operation","dataOperation","createRemoveMethod","remove","createListReference","afDatabase","outsideAngularScheduler","update","valueChanges","snapshotChanges$","a","val","createObjectSnapshotChanges","createObjectReference","URL","AngularFireDatabase","databaseURL","pathOrRef","queryFn","AngularFireDatabase_Factory","AngularFireDatabaseModule","AngularFireDatabaseModule_Factory","defineProperty","exports","_interopDefault","ex","firebase","tslib","util","logger$1","component","DOMStorageWrapper","domStorage_","prefix_","prototype","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","message","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","logWrapper","prefix","__spread","fatal","warn","warnIfPageIsSecure","location","protocol","isInvalidJSONNumber","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","keys","k","sort","splitStringBySize","segsize","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","begin","parent","pieces","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","params","connURL","pairs","toURLString","decodePath","pathStringDecoded","piece","decodeURIComponent","replace","decodeQuery","queryString","e_1","_a","results","charAt","_b","__values","_c","done","segment","kv","e_1_1","call","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","queryParams","parts","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","_super","__extends","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","MAX_NODE","setMaxNode","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","nodeFromJSON","MAX_NODE$1","setNodeFromJSON","setMaxNode$1","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","__assign","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","node_1","childData","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","aChild","bChild","DataSnapshot","node_","ref_","index_","childPathString","childPath","childRef","childrenNode","hasChildren","getKey","DataEvent","eventRegistration","prevName","getPath","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","thisCount","otherKey","thisKey","every","__referenceConstructor","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","startName","getIndexStartName","endName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","validateContextObject","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","onceCallback","resolve","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","generateWithValues","values","Date","getTime","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","existing","unused","delta","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","safeToRemove","forEachTree","prefixPath","func","OperationType","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","emptyChildrenSingleton","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","writesCache","completeCache","accumulator","newViewCache","filterServerNode","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","ackUserWrite_","revertUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","eventNode","__referenceConstructor$1","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","newWriteTree","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","subMerge","layeredCache","write","mergeAtPath","layerTree_","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","needToReevaluate","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","defaultTag","stopListening","queryToRemove","tagToRemove","removeTags_","includeHiddenSets","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","authProvider_","auth_","getImmediate","then","getToken","forceRefresh","Promise","addTokenChangeListener","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","notifyForInvalidToken","errorMessage","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","console","_e","_f","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","status_1","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","INTERRUPT_REASON","Repo","forceRestClient","authProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","remainsInWindow","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","TransactionStatus","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","currentNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","allRun","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","DATABASE_URL_OPTION","FIREBASE_DATABASE_EMULATOR_HOST_VAR","_staticInstance","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","dbEmulatorHost","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","__awaiter","__generator","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","freeze","__proto__","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","TEST_ACCESS","registerDatabase","instance","registerComponent","Component","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","AuthService","afAuth","db","uid","state","object","email","passwort","signInWithEmailAndPassword","signOut"],"mappings":"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","file":"default~modules-admin-admin-module~modules-login-login-module-es5.js","sourcesContent":["import { Injectable, Inject, Optional, PLATFORM_ID, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { of, Observable, from } from 'rxjs';\nimport { observeOn, switchMap, map, shareReplay } from 'rxjs/operators';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, ɵlazySDKProxy, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// WARNING: interface has both a type and a value, skipping emit\nimport * as ɵngcc0 from '@angular/core';\n;\nclass AngularFireAuth {\n    /**\n     * @param {?} options\n     * @param {?} nameOrConfig\n     * @param {?} platformId\n     * @param {?} zone\n     */\n    constructor(options, nameOrConfig, platformId, zone) {\n        /** @type {?} */\n        const schedulers = new ɵAngularFireSchedulers(zone);\n        /** @type {?} */\n        const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(schedulers, platformId);\n        /** @type {?} */\n        const auth = of(undefined).pipe(observeOn(schedulers.outsideAngular), switchMap((/**\n         * @return {?}\n         */\n        () => zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => import('firebase/auth'))))), map((/**\n         * @return {?}\n         */\n        () => ɵfirebaseAppFactory(options, zone, nameOrConfig))), map((/**\n         * @param {?} app\n         * @return {?}\n         */\n        app => app.auth())), shareReplay({ bufferSize: 1, refCount: false }));\n        this.authState = auth.pipe(observeOn(schedulers.outsideAngular), switchMap((/**\n         * @param {?} auth\n         * @return {?}\n         */\n        auth => new Observable(auth.onAuthStateChanged.bind(auth)))), keepUnstableUntilFirst);\n        this.user = auth.pipe(observeOn(schedulers.outsideAngular), switchMap((/**\n         * @param {?} auth\n         * @return {?}\n         */\n        auth => new Observable(auth.onIdTokenChanged.bind(auth)))), keepUnstableUntilFirst);\n        this.idToken = this.user.pipe(switchMap((/**\n         * @param {?} user\n         * @return {?}\n         */\n        user => user ? from(user.getIdToken()) : of(null))));\n        this.idTokenResult = this.user.pipe(switchMap((/**\n         * @param {?} user\n         * @return {?}\n         */\n        user => user ? from(user.getIdTokenResult()) : of(null))));\n        return ɵlazySDKProxy(this, auth, zone);\n    }\n}\nAngularFireAuth.ɵfac = function AngularFireAuth_Factory(t) { return new (t || AngularFireAuth)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAngularFireAuth.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: NgZone }\n];\n/** @nocollapse */ AngularFireAuth.ɵprov = ɵɵdefineInjectable({ factory: function AngularFireAuth_Factory() { return new AngularFireAuth(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(PLATFORM_ID), ɵɵinject(NgZone)); }, token: AngularFireAuth, providedIn: \"any\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuth, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'any'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [FIREBASE_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FIREBASE_APP_NAME]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * Observable of authentication state; as of Firebase 4.0 this is only triggered via sign-in/out\n     * @type {?}\n     */\n    AngularFireAuth.prototype.authState;\n    /**\n     * Observable of the currently signed-in user's JWT token used to identify the user to a Firebase service (or null).\n     * @type {?}\n     */\n    AngularFireAuth.prototype.idToken;\n    /**\n     * Observable of the currently signed-in user (or null).\n     * @type {?}\n     */\n    AngularFireAuth.prototype.user;\n    /**\n     * Observable of the currently signed-in user's IdTokenResult object which contains the ID token JWT string and other\n     * helper properties for getting different data associated with the token as well as all the decoded payload claims\n     * (or null).\n     * @type {?}\n     */\n    AngularFireAuth.prototype.idTokenResult;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AngularFireAuthModule {\n}\nAngularFireAuthModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireAuthModule });\nAngularFireAuthModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireAuthModule_Factory(t) { return new (t || AngularFireAuthModule)(); }, providers: [AngularFireAuth] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireAuthModule, [{\n        type: NgModule,\n        args: [{\n                providers: [AngularFireAuth]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AngularFireAuth, AngularFireAuthModule };\n\n//# sourceMappingURL=angular-fire-auth.js.map","import { InjectionToken, Injectable, Inject, Optional, PLATFORM_ID, NgZone, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { asyncScheduler, Observable, of, merge } from 'rxjs';\nimport { map, share, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport { ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory, ɵfirebaseAppFactory, FIREBASE_OPTIONS, FIREBASE_APP_NAME } from '@angular/fire';\nimport 'firebase/database';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isString(value) {\n    return typeof value === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFirebaseDataSnapshot(value) {\n    return typeof value.exportVal === 'function';\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isNil(obj) {\n    return obj === undefined || obj === null;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFirebaseRef(value) {\n    return typeof value.set === 'function';\n}\n/**\n * Returns a database reference given a Firebase App and an\n * absolute or relative path.\n * @param {?} database\n * @param {?} pathRef\n * @return {?}\n */\nfunction getRef(database, pathRef) {\n    // if a db ref was passed in, just return it\n    return isFirebaseRef(pathRef) ? (/** @type {?} */ (pathRef))\n        : database.ref((/** @type {?} */ (pathRef)));\n}\n/**\n * @param {?} item\n * @param {?} cases\n * @return {?}\n */\nfunction checkOperationCases(item, cases) {\n    if (isString(item)) {\n        return cases.stringCase();\n    }\n    else if (isFirebaseRef(item)) {\n        return (/** @type {?} */ (cases.firebaseCase))();\n    }\n    else if (isFirebaseDataSnapshot(item)) {\n        return (/** @type {?} */ (cases.snapshotCase))();\n    }\n    throw new Error(`Expects a string, snapshot, or reference. Got: ${typeof item}`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n * @template T\n */\nfunction SnapshotPrevKey() { }\nif (false) {\n    /** @type {?} */\n    SnapshotPrevKey.prototype.snapshot;\n    /** @type {?} */\n    SnapshotPrevKey.prototype.prevKey;\n}\n/**\n * Create an observable from a Database Reference or Database Query.\n * @template T\n * @param {?} ref Database Reference\n * @param {?} event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n * @param {?=} listenType\n * @param {?=} scheduler\n * @return {?}\n */\nfunction fromRef(ref, event, listenType = 'on', scheduler = asyncScheduler) {\n    return new Observable((/**\n     * @param {?} subscriber\n     * @return {?}\n     */\n    subscriber => {\n        /** @type {?} */\n        let fn = null;\n        fn = ref[listenType](event, (/**\n         * @param {?} snapshot\n         * @param {?} prevKey\n         * @return {?}\n         */\n        (snapshot, prevKey) => {\n            scheduler.schedule((/**\n             * @return {?}\n             */\n            () => {\n                subscriber.next({ snapshot, prevKey });\n            }));\n            if (listenType == 'once') {\n                scheduler.schedule((/**\n                 * @return {?}\n                 */\n                () => subscriber.complete()));\n            }\n        }), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        err => {\n            scheduler.schedule((/**\n             * @return {?}\n             */\n            () => subscriber.error(err)));\n        }));\n        if (listenType == 'on') {\n            return {\n                /**\n                 * @return {?}\n                 */\n                unsubscribe() {\n                    if (fn != null) {\n                        ref.off(event, fn);\n                    }\n                }\n            };\n        }\n        else {\n            return { /**\n                 * @return {?}\n                 */\n                unsubscribe() { } };\n        }\n    })).pipe(map((/**\n     * @param {?} payload\n     * @return {?}\n     */\n    payload => {\n        const { snapshot, prevKey } = payload;\n        /** @type {?} */\n        let key = null;\n        if (snapshot.exists()) {\n            key = snapshot.key;\n        }\n        return { type: event, payload: snapshot, prevKey, key };\n    })), share());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} ref\n * @param {?} events\n * @param {?=} scheduler\n * @return {?}\n */\nfunction listChanges(ref, events, scheduler) {\n    return fromRef(ref, 'value', 'once', scheduler).pipe(switchMap((/**\n     * @param {?} snapshotAction\n     * @return {?}\n     */\n    snapshotAction => {\n        /** @type {?} */\n        const childEvent$ = [of(snapshotAction)];\n        events.forEach((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => childEvent$.push(fromRef(ref, event, 'on', scheduler))));\n        return merge(...childEvent$).pipe(scan(buildView, []));\n    })), distinctUntilChanged());\n}\n/**\n * @template T\n * @param {?} changes\n * @param {?} key\n * @return {?}\n */\nfunction positionFor(changes, key) {\n    /** @type {?} */\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * @template T\n * @param {?} changes\n * @param {?=} prevKey\n * @return {?}\n */\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        /** @type {?} */\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\n/**\n * @param {?} current\n * @param {?} action\n * @return {?}\n */\nfunction buildView(current, action) {\n    const { payload, type, prevKey, key } = action;\n    /** @type {?} */\n    const currentKeyPosition = positionFor(current, key);\n    /** @type {?} */\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                /** @type {?} */\n                let prevKey = null;\n                action.payload.forEach((/**\n                 * @param {?} payload\n                 * @return {?}\n                 */\n                payload => {\n                    /** @type {?} */\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                }));\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                /** @type {?} */\n                const previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) != prevKey) {\n                    current = current.filter((/**\n                     * @param {?} x\n                     * @return {?}\n                     */\n                    x => x.payload.key !== payload.key));\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter((/**\n             * @param {?} x\n             * @return {?}\n             */\n            x => x.payload.key !== payload.key));\n        case 'child_changed':\n            return current.map((/**\n             * @param {?} x\n             * @return {?}\n             */\n            x => x.payload.key === key ? action : x));\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                /** @type {?} */\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?=} events\n * @return {?}\n */\nfunction validateEventsArray(events) {\n    if (isNil(events) || (/** @type {?} */ (events)).length === 0) {\n        events = ['child_added', 'child_removed', 'child_changed', 'child_moved'];\n    }\n    return events;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?=} events\n * @param {?=} scheduler\n * @return {?}\n */\nfunction snapshotChanges(query, events, scheduler) {\n    events = validateEventsArray(events);\n    return listChanges(query, (/** @type {?} */ (events)), scheduler);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?=} events\n * @param {?=} scheduler\n * @return {?}\n */\nfunction stateChanges(query, events, scheduler) {\n    events = (/** @type {?} */ (validateEventsArray(events)));\n    /** @type {?} */\n    const childEvent$ = events.map((/**\n     * @param {?} event\n     * @return {?}\n     */\n    event => fromRef(query, event, 'on', scheduler)));\n    return merge(...childEvent$);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?=} events\n * @param {?=} scheduler\n * @return {?}\n */\nfunction auditTrail(query, events, scheduler) {\n    /** @type {?} */\n    const auditTrail$ = stateChanges(query, events)\n        .pipe(scan((/**\n     * @param {?} current\n     * @param {?} action\n     * @return {?}\n     */\n    (current, action) => [...current, action]), []));\n    return waitForLoaded(query, auditTrail$, scheduler);\n}\n/**\n * @record\n */\nfunction LoadedMetadata() { }\nif (false) {\n    /** @type {?} */\n    LoadedMetadata.prototype.data;\n    /** @type {?} */\n    LoadedMetadata.prototype.lastKeyToLoad;\n}\n/**\n * @template T\n * @param {?} query\n * @param {?=} scheduler\n * @return {?}\n */\nfunction loadedData(query, scheduler) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, 'value', 'on', scheduler)\n        .pipe(map((/**\n     * @param {?} data\n     * @return {?}\n     */\n    data => {\n        // Store the last key in the data set\n        /** @type {?} */\n        let lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.payload.forEach((/**\n         * @param {?} child\n         * @return {?}\n         */\n        child => {\n            lastKeyToLoad = child.key;\n            return false;\n        }));\n        // return data set and the current last key loaded\n        return { data, lastKeyToLoad };\n    })));\n}\n/**\n * @template T\n * @param {?} query\n * @param {?} action$\n * @param {?=} scheduler\n * @return {?}\n */\nfunction waitForLoaded(query, action$, scheduler) {\n    /** @type {?} */\n    const loaded$ = loadedData(query, scheduler);\n    return loaded$\n        .pipe(withLatestFrom(action$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([loaded, actions]) => {\n        // Store the last key in the data set\n        /** @type {?} */\n        let lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        /** @type {?} */\n        const loadedKeys = actions.map((/**\n         * @param {?} snap\n         * @return {?}\n         */\n        snap => snap.key));\n        return { actions, lastKeyToLoad, loadedKeys };\n    })), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile((/**\n     * @param {?} meta\n     * @return {?}\n     */\n    meta => meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1)), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map((/**\n     * @param {?} meta\n     * @return {?}\n     */\n    meta => meta.actions)));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} ref\n * @param {?} operation\n * @return {?}\n */\nfunction createDataOperationMethod(ref, operation) {\n    return (/**\n     * @template T\n     * @param {?} item\n     * @param {?} value\n     * @return {?}\n     */\n    function dataOperation(item, value) {\n        return checkOperationCases(item, {\n            stringCase: (/**\n             * @return {?}\n             */\n            () => ref.child((/** @type {?} */ (item)))[operation](value)),\n            firebaseCase: (/**\n             * @return {?}\n             */\n            () => ((/** @type {?} */ (item)))[operation](value)),\n            snapshotCase: (/**\n             * @return {?}\n             */\n            () => ((/** @type {?} */ (item))).ref[operation](value))\n        });\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(davideast): Find out why TS thinks this returns firebase.Primise\n// instead of Promise.\n/**\n * @template T\n * @param {?} ref\n * @return {?}\n */\nfunction createRemoveMethod(ref) {\n    return (/**\n     * @param {?=} item\n     * @return {?}\n     */\n    function remove(item) {\n        if (!item) {\n            return ref.remove();\n        }\n        return checkOperationCases(item, {\n            stringCase: (/**\n             * @return {?}\n             */\n            () => ref.child((/** @type {?} */ (item))).remove()),\n            firebaseCase: (/**\n             * @return {?}\n             */\n            () => ((/** @type {?} */ (item))).remove()),\n            snapshotCase: (/**\n             * @return {?}\n             */\n            () => ((/** @type {?} */ (item))).ref.remove())\n        });\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?} afDatabase\n * @return {?}\n */\nfunction createListReference(query, afDatabase) {\n    /** @type {?} */\n    const outsideAngularScheduler = afDatabase.schedulers.outsideAngular;\n    return {\n        query,\n        update: createDataOperationMethod(query.ref, 'update'),\n        set: createDataOperationMethod(query.ref, 'set'),\n        push: (/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => query.ref.push(data)),\n        remove: createRemoveMethod(query.ref),\n        /**\n         * @param {?=} events\n         * @return {?}\n         */\n        snapshotChanges(events) {\n            return snapshotChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        /**\n         * @param {?=} events\n         * @return {?}\n         */\n        stateChanges(events) {\n            return stateChanges(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        /**\n         * @param {?=} events\n         * @return {?}\n         */\n        auditTrail(events) {\n            return auditTrail(query, events, outsideAngularScheduler).pipe(afDatabase.keepUnstableUntilFirst);\n        },\n        /**\n         * @param {?=} events\n         * @return {?}\n         */\n        valueChanges(events) {\n            /** @type {?} */\n            const snapshotChanges$ = snapshotChanges(query, events, outsideAngularScheduler);\n            return snapshotChanges$.pipe(map((/**\n             * @param {?} actions\n             * @return {?}\n             */\n            actions => actions.map((/**\n             * @param {?} a\n             * @return {?}\n             */\n            a => (/** @type {?} */ (a.payload.val())))))), afDatabase.keepUnstableUntilFirst);\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?=} scheduler\n * @return {?}\n */\nfunction createObjectSnapshotChanges(query, scheduler) {\n    return (/**\n     * @return {?}\n     */\n    function snapshotChanges() {\n        return fromRef(query, 'value', 'on', scheduler);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} query\n * @param {?} afDatabase\n * @return {?}\n */\nfunction createObjectReference(query, afDatabase) {\n    return {\n        query,\n        /**\n         * @template T\n         * @return {?}\n         */\n        snapshotChanges() {\n            return createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)().pipe((/** @type {?} */ (afDatabase.keepUnstableUntilFirst)));\n        },\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        update(data) { return (/** @type {?} */ (query.ref.update((/** @type {?} */ (data))))); },\n        /**\n         * @param {?} data\n         * @return {?}\n         */\n        set(data) { return (/** @type {?} */ (query.ref.set(data))); },\n        /**\n         * @return {?}\n         */\n        remove() { return (/** @type {?} */ (query.ref.remove())); },\n        /**\n         * @template T\n         * @return {?}\n         */\n        valueChanges() {\n            /** @type {?} */\n            const snapshotChanges$ = createObjectSnapshotChanges(query, afDatabase.schedulers.outsideAngular)();\n            return snapshotChanges$.pipe(afDatabase.keepUnstableUntilFirst, map((/**\n             * @param {?} action\n             * @return {?}\n             */\n            action => action.payload.exists() ? (/** @type {?} */ (action.payload.val())) : null)));\n        },\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst URL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nclass AngularFireDatabase {\n    /**\n     * @param {?} options\n     * @param {?} nameOrConfig\n     * @param {?} databaseURL\n     * @param {?} platformId\n     * @param {?} zone\n     */\n    constructor(options, nameOrConfig, databaseURL, platformId, zone) {\n        this.schedulers = new ɵAngularFireSchedulers(zone);\n        this.keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(this.schedulers, platformId);\n        this.database = zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const app = ɵfirebaseAppFactory(options, zone, nameOrConfig);\n            return app.database(databaseURL || undefined);\n        }));\n    }\n    /**\n     * @template T\n     * @param {?} pathOrRef\n     * @param {?=} queryFn\n     * @return {?}\n     */\n    list(pathOrRef, queryFn) {\n        /** @type {?} */\n        const ref = getRef(this.database, pathOrRef);\n        /** @type {?} */\n        let query = ref;\n        if (queryFn) {\n            query = queryFn(ref);\n        }\n        return createListReference(query, this);\n    }\n    /**\n     * @template T\n     * @param {?} pathOrRef\n     * @return {?}\n     */\n    object(pathOrRef) {\n        /** @type {?} */\n        const ref = getRef(this.database, pathOrRef);\n        return createObjectReference(ref, this);\n    }\n    /**\n     * @return {?}\n     */\n    createPushId() {\n        return this.database.ref().push().key;\n    }\n}\nAngularFireDatabase.ɵfac = function AngularFireDatabase_Factory(t) { return new (t || AngularFireDatabase)(ɵngcc0.ɵɵinject(FIREBASE_OPTIONS), ɵngcc0.ɵɵinject(FIREBASE_APP_NAME, 8), ɵngcc0.ɵɵinject(URL, 8), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAngularFireDatabase.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [FIREBASE_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FIREBASE_APP_NAME,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [URL,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: NgZone }\n];\n/** @nocollapse */ AngularFireDatabase.ɵprov = ɵɵdefineInjectable({ factory: function AngularFireDatabase_Factory() { return new AngularFireDatabase(ɵɵinject(FIREBASE_OPTIONS), ɵɵinject(FIREBASE_APP_NAME, 8), ɵɵinject(URL, 8), ɵɵinject(PLATFORM_ID), ɵɵinject(NgZone)); }, token: AngularFireDatabase, providedIn: \"any\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireDatabase, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'any'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [FIREBASE_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FIREBASE_APP_NAME]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [URL]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    AngularFireDatabase.prototype.database;\n    /** @type {?} */\n    AngularFireDatabase.prototype.schedulers;\n    /** @type {?} */\n    AngularFireDatabase.prototype.keepUnstableUntilFirst;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AngularFireDatabaseModule {\n}\nAngularFireDatabaseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFireDatabaseModule });\nAngularFireDatabaseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AngularFireDatabaseModule_Factory(t) { return new (t || AngularFireDatabaseModule)(); }, providers: [AngularFireDatabase] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireDatabaseModule, [{\n        type: NgModule,\n        args: [{\n                providers: [AngularFireDatabase]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AngularFireDatabase, AngularFireDatabaseModule, URL, auditTrail, createListReference, fromRef, listChanges, snapshotChanges, stateChanges };\n\n//# sourceMappingURL=angular-fire-database.js.map","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += util.stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n */\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return util.stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length) {\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0) {\r\n                    pieces.push(childPieces[i]);\r\n                }\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        if (leftKeys.length === rightKeys.length) {\r\n            return 0;\r\n        }\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n            // We interpret the subdomain of a 3 component URL as the namespace name.\r\n            namespace = subdomain;\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = tslib.__assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = tslib.__assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (util.contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = this.path_.child(childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return this.syncTree_.calcCompleteEventCache(this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            util.assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        util.assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    util.assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children.size > 0) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = path.getFront();\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        util.assert(type === Change.CHILD_ADDED ||\r\n            type === Change.CHILD_CHANGED ||\r\n            type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\n// eslint-disable-next-line @typescript-eslint/class-name-casing\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey === '.priority') {\r\n                    util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ eventCache, eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ serverCache, serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views.set(queryId, view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = tslib.__read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view\r\n                            .getQuery()\r\n                            .getQueryParams()\r\n                            .loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view\r\n                    .getQuery()\r\n                    .getQueryParams()\r\n                    .loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view\r\n                    .getQuery()\r\n                    .getQueryParams()\r\n                    .loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        each(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return applySubtreeWrite(Path.Empty, this.writeTree_, node);\r\n    };\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    return CompoundWrite;\r\n}());\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    writeRecord.path.child(childName).contains(path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    function AuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = tslib.__assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = tslib.__spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (util.isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient, app, authProvider) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        var authTokenProvider = new AuthTokenProvider(app, authProvider);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactionsInit_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var existing = this.serverSyncTree_.calcCompleteEventCache(path);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = new SparseSnapshotTree();\r\n        this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\r\n            var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\r\n            resolvedOnDisconnectTree.remember(path, resolved);\r\n        });\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.path.getBack();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        }\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = path.getFront();\r\n        while (next !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n            next = path.getFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.transactionsInit_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    }\r\n                    else {\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    front = path.getFront();\r\n    while (front !== null && transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n        front = path.getFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authProvider) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        },\r\n        increment: function (delta) {\r\n            return {\r\n                '.sv': {\r\n                    'increment': delta\r\n                }\r\n            };\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.checkDeleted_('delete');\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.repo_ = null;\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.6.1\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;\n//# sourceMappingURL=index.cjs.js.map\n","import '@firebase/database';\n//# sourceMappingURL=index.esm.js.map\n","import { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFireDatabase } from '@angular/fire/database';\r\nimport { User } from '@actor/models/user';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, first } from 'rxjs/operators';\r\nimport { async } from '@angular/core/testing';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n\r\n  uid: Observable<string | null> = this.afAuth.authState.pipe(\r\n    map(state => {\r\n\r\n      if (!state) {\r\n        return null;\r\n      } else {\r\n        return state.uid;\r\n      }\r\n    }));\r\n\r\n  isAdmin: Observable<boolean> = this.uid.pipe(\r\n\r\n    switchMap(uid => {\r\n      if (!uid) {\r\n        return of(false);\r\n      } else {\r\n        return this.db.object<boolean>('admin/' + uid).valueChanges();\r\n      }\r\n    })\r\n  );\r\n\r\n\r\n\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n    private db: AngularFireDatabase\r\n  ) { }\r\n\r\n  login(email: string, passwort: string) {\r\n    try {\r\n      this.afAuth.signInWithEmailAndPassword(email, passwort);\r\n    } catch (error) {\r\n      console.log(` Error in loginFunction ${error.message} `);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.afAuth.signOut();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n"]}